// Script pour v√©rifier le contenu de la base de donn√©es
const { query } = require('./config/database-sqlite');

async function checkDatabase() {
  console.log('üîç V√©rification de la base de donn√©es\n');

  try {
    // V√©rifier les utilisateurs
    console.log('1. Utilisateurs:');
    const users = await query('SELECT id, nom, prenom, email, role FROM utilisateurs');
    console.log(`   Total: ${users.length} utilisateurs`);
    users.forEach(user => {
      console.log(`   - ${user.prenom} ${user.nom} (${user.email}) - ${user.role}`);
    });

    // V√©rifier les biens
    console.log('\n2. Biens immobiliers:');
    const biens = await query('SELECT id, titre, ville, statut, statut_publication, proprietaire_id FROM biens');
    console.log(`   Total: ${biens.length} biens`);
    
    if (biens.length > 0) {
      biens.forEach(bien => {
        console.log(`   - ${bien.titre} (${bien.ville}) - ${bien.statut} - ${bien.statut_publication}`);
      });

      // V√©rifier les biens par statut de publication
      const biensPublies = await query('SELECT COUNT(*) as count FROM biens WHERE statut_publication = ?', ['publie']);
      console.log(`   Biens publi√©s: ${biensPublies[0].count}`);
      
      const biensBrouillon = await query('SELECT COUNT(*) as count FROM biens WHERE statut_publication = ?', ['brouillon']);
      console.log(`   Biens en brouillon: ${biensBrouillon[0].count}`);
    }

    // V√©rifier les conversations
    console.log('\n3. Conversations:');
    const conversations = await query('SELECT COUNT(*) as count FROM conversations');
    console.log(`   Total: ${conversations[0].count} conversations`);

    // V√©rifier les cr√©neaux
    console.log('\n4. Cr√©neaux:');
    const creneaux = await query('SELECT COUNT(*) as count FROM creneaux');
    console.log(`   Total: ${creneaux[0].count} cr√©neaux`);

    console.log('\n‚úÖ V√©rification termin√©e');

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error);
  }
}

// Ex√©cuter la v√©rification
checkDatabase();
